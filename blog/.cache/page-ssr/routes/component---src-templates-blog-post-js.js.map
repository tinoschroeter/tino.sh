{"version":3,"file":"component---src-templates-blog-post-js.js","mappings":";;;;;;;;AAEA,KAAMA,CAAAA,iBAAiB,CAAGC,MAAM,EAAI,CACnC,GAAIC,CAAAA,eAAe,CAAG,KAAtB,CACA,GAAIC,CAAAA,eAAe,CAAG,KAAtB,CACA,GAAIC,CAAAA,mBAAmB,CAAG,KAA1B,CAEA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,MAAM,CAACK,MAA3B,CAAmCD,CAAC,EAApC,CAAwC,CACvC,KAAME,CAAAA,SAAS,CAAGN,MAAM,CAACI,CAAD,CAAxB,CAEA,GAAIH,eAAe,EAAI,WAAWM,IAAX,CAAgBD,SAAhB,CAAnB,EAAiDA,SAAS,CAACE,WAAV,KAA4BF,SAAjF,CAA4F,CAC3FN,MAAM,CAAGA,MAAM,CAACS,KAAP,CAAa,CAAb,CAAgBL,CAAhB,EAAqB,GAArB,CAA2BJ,MAAM,CAACS,KAAP,CAAaL,CAAb,CAApC,CACAH,eAAe,CAAG,KAAlB,CACAE,mBAAmB,CAAGD,eAAtB,CACAA,eAAe,CAAG,IAAlB,CACAE,CAAC,GACD,CAND,IAMO,IAAIF,eAAe,EAAIC,mBAAnB,EAA0C,WAAWI,IAAX,CAAgBD,SAAhB,CAA1C,EAAwEA,SAAS,CAACI,WAAV,KAA4BJ,SAAxG,CAAmH,CACzHN,MAAM,CAAGA,MAAM,CAACS,KAAP,CAAa,CAAb,CAAgBL,CAAC,CAAG,CAApB,EAAyB,GAAzB,CAA+BJ,MAAM,CAACS,KAAP,CAAaL,CAAC,CAAG,CAAjB,CAAxC,CACAD,mBAAmB,CAAGD,eAAtB,CACAA,eAAe,CAAG,KAAlB,CACAD,eAAe,CAAG,IAAlB,CACA,CALM,IAKA,CACNA,eAAe,CAAGK,SAAS,CAACI,WAAV,KAA4BJ,SAA5B,EAAyCA,SAAS,CAACE,WAAV,KAA4BF,SAAvF,CACAH,mBAAmB,CAAGD,eAAtB,CACAA,eAAe,CAAGI,SAAS,CAACE,WAAV,KAA4BF,SAA5B,EAAyCA,SAAS,CAACI,WAAV,KAA4BJ,SAAvF,CACA,CACD,CAED,MAAON,CAAAA,MAAP,CACA,CA3BD,CA6BA,KAAMW,CAAAA,SAAS,CAAG,CAACC,KAAD,CAAQC,OAAR,GAAoB,CACrC,GAAI,EAAE,MAAOD,CAAAA,KAAP,GAAiB,QAAjB,EAA6BE,KAAK,CAACC,OAAN,CAAcH,KAAd,CAA/B,CAAJ,CAA0D,CACzD,KAAM,IAAII,CAAAA,SAAJ,CAAc,8CAAd,CAAN,CACA,CAEDH,OAAO,CAAGI,MAAM,CAACC,MAAP,CAAc,CACvBC,UAAU,CAAE,KADW,CAAd,CAEPN,OAFO,CAAV,CAIA,KAAMO,CAAAA,WAAW,CAAGC,CAAC,EAAIR,OAAO,CAACM,UAAR,CAAqBE,CAAC,CAACC,MAAF,CAAS,CAAT,EAAYd,WAAZ,GAA4Ba,CAAC,CAACZ,KAAF,CAAQ,CAAR,CAAjD,CAA8DY,CAAvF,CAEA,GAAIP,KAAK,CAACC,OAAN,CAAcH,KAAd,CAAJ,CAA0B,CACzBA,KAAK,CAAGA,KAAK,CAACW,GAAN,CAAUF,CAAC,EAAIA,CAAC,CAACG,IAAF,EAAf,EACNC,MADM,CACCJ,CAAC,EAAIA,CAAC,CAAChB,MADR,EAENqB,IAFM,CAED,GAFC,CAAR,CAGA,CAJD,IAIO,CACNd,KAAK,CAAGA,KAAK,CAACY,IAAN,EAAR,CACA,CAED,GAAIZ,KAAK,CAACP,MAAN,GAAiB,CAArB,CAAwB,CACvB,MAAO,EAAP,CACA,CAED,GAAIO,KAAK,CAACP,MAAN,GAAiB,CAArB,CAAwB,CACvB,MAAOQ,CAAAA,OAAO,CAACM,UAAR,CAAqBP,KAAK,CAACJ,WAAN,EAArB,CAA2CI,KAAK,CAACF,WAAN,EAAlD,CACA,CAED,KAAMiB,CAAAA,YAAY,CAAGf,KAAK,GAAKA,KAAK,CAACF,WAAN,EAA/B,CAEA,GAAIiB,YAAJ,CAAkB,CACjBf,KAAK,CAAGb,iBAAiB,CAACa,KAAD,CAAzB,CACA,CAEDA,KAAK,CAAGA,KAAK,CACXgB,OADM,CACE,WADF,CACe,EADf,EAENlB,WAFM,GAGNkB,OAHM,CAGE,iBAHF,CAGqB,CAACC,CAAD,CAAIC,EAAJ,GAAWA,EAAE,CAACtB,WAAH,EAHhC,EAINoB,OAJM,CAIE,YAJF,CAIgBG,CAAC,EAAIA,CAAC,CAACvB,WAAF,EAJrB,CAAR,CAMA,MAAOY,CAAAA,WAAW,CAACR,KAAD,CAAlB,CACA,CAxCD,CA0CAoB,MAAM,CAACC,OAAP,CAAiBtB,SAAjB,CACA;AACAqB,yBAAA,CAAyBrB,SAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;8VCtEMwB,EAA0B,iDAAC,GAAD,CAAO,EAAP,CAAY,CAAZ,CAAe,CAAf,IACnBC,EAAsB,iDAAC,GAAD,CAAM,IAAN,CAAY,IAAZ,CAAkB,IAAlB,IACtBC,EAAmB,iDAC9B,GAD8B,CACzB,GADyB,CACpB,GADoB,CACf,IADe,CACT,IADS,CACH,IADG,CACG,IADH,CACS,IADT,CACe,IADf,CACqB,IADrB,CAC2B,IAD3B,CACiC,IADjC,IAuG1BC,EAAO,SAACC,CAAD,CAACA,OAA0BC,SAAQF,IAARE,CAAaD,CAAbC,CAA1BD,CAAuCA,EAE/CE,EAAc,SAACC,CAAD,CAAYC,CAAZ,CAAYA,OAAsBD,GAAIC,CAA1BA,CAA0BA,EAsB7CC,EAAY,SAACC,CAAD,CAACA,OACxBA,GAAOtB,GAAPsB,CAAW,kBAAYC,GAAMC,GAAND,CAAMC,GAAND,CAAaA,EAAME,KAAnBF,CAAmBE,GAA/BF,CAA+BE,CAA1CH,EAAoDnB,IAApDmB,CAAoDnB,KAApDmB,CADwBA,CAC4BnB,UAEtCuB,EAFsCvB,CAEnBwB,CAFmBxB,CAEnBwB,CACjC,GAAMC,GAAMD,EAASE,WAATF,CAASE,GAATF,CAAZ,CACA,IAAa,CAAb,GAAIC,CAAJ,CAAgB,CACd,GAAME,GAAMH,EAASI,MAATJ,CAAgBC,EAAM,CAAtBD,CAAZ,CACA,YAAIG,CAAJ,CACE,YAEF,GAAmB,IAAfA,EAAIhD,MAAW,EAAoB,IAAfgD,EAAIhD,MAA5B,CACE,MAAOgD,EAAP,CAAOA,UAMGE,EANHF,CAOXG,CAPWH,CAOXG,CAEA,MAQIA,EAPFC,MADF,CACEA,4BADF,CAEET,EAMEQ,EANFR,KAFF,CAGEU,EAKEF,EALFE,MAHF,CAIEC,EAIEH,EAJFG,cAJF,CAKEC,EAGEJ,EAHFI,WALF,CAMEC,EAEEL,EAFFK,WANF,CAMEA,EAEEL,EADFM,OAPF,CAOEA,aAAU,eAAVA,CAAUC,CAPZ,CAYA,MAHAD,GAAUA,EAAQvC,GAARuC,CAAY,kBAAUE,GAAOtD,WAAPsD,EAAVA,CAAiBtD,CAA7BoD,CAAVA,CACAL,EAAS9C,EAAU8C,CAAV9C,CADTmD,CAGId,GAASU,CAATV,CAASU,KACCF,CADDE,CACCF,CAAMM,SAANN,CAAeC,QAAfD,CAAuBK,YAAab,EAAQU,CAA5CF,CADDE,CAATV,EAGAW,EAAeX,KAAfW,EAAwBA,EAAeD,MAAvCC,EAAuCD,CAAWG,CAAlDF,GACFE,EAAcF,EAAeX,KAAfW,CAAuBA,EAAeD,MADlDC,EACkDD,cAGlDD,CAHkDC,EAIpDV,EAAQA,GAASW,EAAeX,KAAxBA,EAAiCY,EAAYA,EAAYvD,MAAZuD,CAAqB,CAAjCA,CAAzCZ,CACAU,EAASA,GAAUO,KAAKC,KAALD,CAAWjB,GAASa,GAnKd,kBAmKKb,CAAXiB,CALiCP,GAO/CV,IAEDA,EADEU,GAAUG,CAAVH,CACMA,EAASG,CADfH,CAEOC,EAAeX,KAAfW,CACDA,EAAeX,KADdW,CAEAD,EACDO,KAAKC,KAALD,CAAWP,EA3KE,kBA2KbO,CADCP,CA3KW,GAsKnBV,EAYDa,IAAgBH,CAAhBG,CACFH,EAASO,KAAKC,KAALD,CAAWjB,EAAQa,CAAnBI,CADPJ,CAEQA,IACVA,EAAcb,EAAQU,CADZG,CArBwCH,CADlDC,CAuBsBD,KAGdF,CAHcE,CAGdF,CAAMR,OAANQ,CAAaE,QAAbF,CAAqBK,aAArBL,CAAkCC,QAAlCD,CAA0CM,SAA1CN,CAHcE,CA1BtBV,CAAJ,CA6BsDc,SAOxCK,EAPwCL,CAQtDN,CARsDM,CAStDd,CATsDc,CAStDd,OAIA,gBAJAA,CAIA,GAJAA,EAAQ,EAIR,EAJQ,UAIDoB,GAFPZ,EAAOD,EAAqBC,CAArBD,CAEAa,EADCA,mBAHA,EAG+CZ,EAA1BN,QAHrB,CAMNF,CANM,CAONiB,KAAKC,KAALD,CAAWjB,EAJ0CQ,EAAhBK,WAIrCI,CAPM,CAQNT,EAAKG,cAALH,CAAoBQ,MAApBR,EAAoBQ,KARd,CASNR,EAAKa,GATC,CAUNb,EAAK3C,OAVC,GAUDA,MAVC,CAIDyD,EAOJvB,GAPH,CAOGA,SAGWwB,EAHXxB,CAIHS,CAJGT,CAIHS,CAIA,MACEgB,GAHFhB,EAAOD,EAAqBC,CAArBD,CAGLiB,YADF,CAEEb,EAWEH,EAXFG,cAFF,CAGES,EAUEZ,EAVFY,mBAHF,CAIEX,EASED,EATFC,MAJF,CAKEY,EAQEb,EARFa,GALF,CAMExD,EAOE2C,EAPF3C,OANF,CAOEmC,EAMEQ,EANFR,KAPF,CAQEU,EAKEF,EALFE,MARF,CASER,EAIEM,EAJFN,QATF,CASEA,EAIEM,EAHFiB,QAVF,CAUEA,aAAW,CAAEnC,MAAF,CAAXmC,CAAanC,CAVf,CAWEoC,EAEElB,EAFFkB,eAXF,CAYEC,EACEnB,EADFmB,cAZF,CAqBA,GANKH,GACHC,EAASnC,IAATmC,CAASnC,wEAATmC,CADGD,CACMlC,kBAKA8B,EAAX,CACE,SAAUQ,MAAV,CAAUA,wCAAV,EAGGjB,IAAoBA,EAAeX,KAAfW,EAAyBA,EAAeD,MAA5DC,EAOOA,EAAeK,MAAfL,GACVA,EAAeK,MAAfL,CAAwBV,EAAmBC,CAAnBD,CADdU,CAPPA,CAEHA,EAAiB,CACfX,OADe,CAEfU,QAFe,CAGfM,iBAAQL,CAARK,EAAQL,MAARK,CAAQL,EAAgBK,MAAxBA,GAAkCf,EAAmBC,CAAnBD,CAAlCe,EAAqDd,MAHtC,CAFdS,CAWL,GAAMG,GAAU,GAAIe,IAAJ,CAAqBrB,EAAKM,OAA1B,CAAhB,CAA0CA,CAErB,IAAjBA,EAAQgB,IAAS,EAAKhB,EAAQiB,GAARjB,CAAQiB,MAARjB,CAAL,EAA4BA,EAAQiB,GAARjB,CAAQiB,EAARjB,CAFPA,IAGxCA,iBACAA,YADAA,CAEAA,EAAQkB,GAARlB,CAAYH,EAAeK,MAA3BF,CALwCA,EAQtCA,EAAQiB,GAARjB,CAAQiB,KAARjB,GAAsBA,EAAQiB,GAARjB,CAAQiB,KAARjB,CAAtBA,GACFW,EAASnC,IAATmC,CAASnC,IACHkC,CADGlC,CACHkC,kFADNC,EAIEX,iBADEH,EAAeK,MACjBF,CADiBE,KACjBF,CADiBE,KACjBF,CALAA,CARsCA,CAmB1C,GAAMmB,YAyF4BzB,CAzF5ByB,CAyF4BzB,CAClC,GAGEN,GAKEM,EALFN,QAHF,CAGEA,EAKEM,EAJFC,MAJF,CAIEA,4BAJF,CAKkByB,EAGd1B,EAHFG,cALF,CAKEA,EAGEH,EAFFiB,QANF,CAMEA,aAAW,CAAEnC,MAAF,CAAXmC,CAAanC,CANf,CAMeA,EAEXkB,EADFI,WAPF,CAOEA,aAAcxB,CAAdwB,CAAcxB,CAPhB,CAYM+C,EAA0BlE,OAAOmE,OAAPnE,CADT,CAAE+B,MAHrBQ,EAPFR,KAUqB,CAASU,OAH5BF,EANFE,MASqB,CACSzC,EAA+BQ,MAA/BR,CAC9B,YAAEY,GAAGiD,OAAHjD,CAAGiD,sBAAiBA,EAAjBA,EAAsCA,EAAO,CAA7CA,CAA6C,CADpB7D,CAZhC,CAeA,GAAIkE,EAAwB9E,MAA5B,CACE,SAAUuE,MAAV,CAAUA,mGAC2FO,EAChG5D,GADgG4D,CAC5F,kBAAOE,GAAI3D,IAAJ2D,CAAI3D,IAAJ2D,CAAPA,CAAW3D,CADiFyD,EAEhGzD,IAFgGyD,CAEhGzD,IAFgGyD,CADrG,EAOF,gBAAI1B,CAAJ,CAAIA,eAoBJP,aApBIO,CAqBYyB,IAAhBvB,cArBIF,CAsBJT,SAtBIS,CAuBJC,UAvBID,CAuBJC,IACAW,GAxBIZ,CAwBJY,sBAxBIZ,CAwBJY,IACAiB,oBAzBI7B,CAyBJ6B,IACAb,QA1BIhB,CA0BJgB,aAAW,CAAEnC,MAAF,CAAXmC,CAAanC,CA1BTmB,CA4BAI,EAAcqB,EAAclC,KAAdkC,CAAsBA,EAAcxB,MA5BlDD,CA8BE8B,EAAYC,aALKrD,CAKLqD,CALKrD,CAKLqD,CA9Bd/B,CAiCJ,GAAIT,GAASU,CAAb,CAAqB,CACnB,GAAM+B,GAAaC,EAA4BR,CAA5BQ,CAA2C,CAC5D1C,OAD4D,CAE5DU,QAF4D,CAG5DW,KAH4D,CAA3CqB,CAAnB,CAKA1C,EAAQyC,EAAWzC,KAAnBA,CACAU,EAAS+B,EAAW/B,MADpBV,CAEAa,EAAc4B,EAAW5B,WAFzBb,CAKGA,GAMOU,IACVA,EAASO,KAAKC,KAALD,CAAWjB,EAAQa,CAAnBI,CADCP,CANPV,CAIDA,EAHGU,EAGKO,KAAKC,KAALD,CAAWP,EAASG,CAApBI,CAHLP,CAzamB,GAwarBV,CAUL,QAAM2C,EAAgB3C,CAAtB,CAMA,GAJEkC,EAAclC,KAAdkC,CAAsBlC,CAAtBkC,EAA+BA,EAAcxB,MAAdwB,CAAwBxB,CAIzD,CAAwB,CACtB,GAAMkC,GAAiBV,EAAclC,KAAdkC,CAAsBlC,CAAtBkC,CAAsBlC,OAAtBkC,CAAsBlC,QAA7C,CACAyB,EAASnC,IAATmC,CAAcoB,sMACED,CADFC,CACED,UACdA,CADcA,CACe5C,CADf4C,CACuBlC,CAFzBmC,CAGO3C,CAHP2C,CAGoDD,CAHpDC,CAIZX,EAAcU,CAAdV,CAJYW,CAAdpB,EAIgBmB,UAGZA,CAHYA,EAId5C,EAAQkC,EAAclC,KAAtBA,CACAU,EAASO,KAAKC,KAALD,CAAWjB,EAAQa,CAAnBI,CALK2B,EAQd5C,GADAU,EAASwB,EAAcxB,MACvBV,EAAiBa,CAZnBY,CAqBF,OAAO,CACLqB,MANYP,EACX9D,MADW8D,CACJ,kBAAQT,IAAQ,CAAhBA,CAAgB,CADZS,EAEXhE,GAFWgE,CAEP,kBAAWtB,MAAKC,KAALD,CAAW8B,EAAW/C,CAAtBiB,CAAX8B,CAAiC/C,CAF1BuC,EAGX9D,MAHW8D,CAGJ,kBAAQT,IAAQI,EAAclC,KAA9B8B,CAA8B9B,CAH1BuC,CAKP,CAEL1B,aAFK,CAGLmC,kBAAmBL,CAHd,CAILM,mBAAoBhC,KAAKC,KAALD,CAAW0B,EAAgB9B,CAA3BI,CAJf,CAKLiC,cAAelD,CALV,CAAP,CAlFSmD,CADL1C,CACqBD,CADrBC,CAAJ,CACyBD,gBACdC,CADcD,CAEhB4C,EAAqB5C,CAArB4C,CAFgB5C,CAEKA,cACnBC,CADmBD,CAErB4C,KAAuBxC,aAAvBwC,EAAuC5C,CAAvC4C,EAFqB5C,EAI5BiB,EAASnC,IAATmC,CAASnC,iDAC0CY,CAD1CZ,CAC0CY,qEAD1CZ,CACwHmB,CADjIgB,EAGO,CACLqB,MAAO,CAACZ,EAAclC,KAAf,CADF,CAELgD,kBAAmBd,EAAclC,KAF5B,CAGLiD,mBAAoBf,EAAcxB,MAH7B,CAILG,YAAaqB,EAAclC,KAAdkC,CAAsBA,EAAcxB,MAJ5C,CAKLwC,cAAehB,EAAclC,KALxB,CAPqBQ,CAH9B,CAjHmB6C,CAAbpB,CAAaoB,KAAyB7C,CAAzB6C,CAAyB7C,CAAMG,gBAANH,CAAzB6C,CAAbpB,CAAN,CAEMqB,EAAqC,CACzCC,QAAS,EADgC,CAF3C,CAMIT,EAAQtC,EAAKsC,KANjB,CAOKA,IACHA,EA5KoB,SAAC9C,CAAD,CAAgBS,CAAhB,CAAgBA,CACtC,OAAQA,CAAR,EAGE,kBACE,qBAAsBT,CAAtB,CAAsBA,MAAtB,CAAkCA,CAAlC,CAAkCA,WAAlC,CAGF,YACE,MAAUA,OAAV,CAGF,gBACE,cAEF,QACE,OAfJ,CA2KUwD,CA5KY,CA4KHvB,EAAWe,iBA5KR,CA4K2BvC,CA5K3B,CA2KjBqC,EAILhC,EAAQ2C,OAAR3C,CAAgB,YACd,GAAMjB,GAASoC,EAAWa,KAAXb,CACZ1D,GADY0D,CACR,YACH,GAAMyB,GAAWtC,EACflB,CADekB,CAEfU,CAFeV,CAGfH,KAAKC,KAALD,CAAWa,EAAOG,EAAWpB,WAA7BI,CAHeG,CAIfJ,CAJeI,CAKfC,CALeD,CAMfvD,CANeuD,CAAjB,CAQA,SACGsC,CADH,EACGA,EAAU1D,KADb,EAEG0D,EAAShD,MAFZ,EAGGgD,EAAS3D,GAHZ,EAIG2D,EAAS1C,MAJZ,CAWA,MAAO0C,EAAP,CALEjC,EAASnC,IAATmC,CAASnC,IACHkC,CADGlC,CACHkC,2BADGlC,CACmCY,CADnCZ,CACmCY,6BAD5CuB,EAC4CvB,CAjBnC+B,EAuBZxD,MAvBYwD,CAuBL0B,OAvBK1B,CAAf,CAyBA,WAAIjB,CAAJ,EAAIA,QAAoBA,CAAxB,EAAwBA,SAAoBA,CAA5C,CAA+D,CAC7D,GAAM4C,GACJ/D,EAAOgE,IAAPhE,CAAY,kBAAOiE,GAAI9D,KAAJ8D,GAAc7B,EAAWiB,aAAhCY,CAAgCZ,CAA5CrD,GAA8DA,EAAO,CAAPA,CADhE,CAGI+D,IACFN,EAAOS,QAAPT,CAAkB,CAChBvD,IAAK6D,EAAS7D,GADE,CAEhBiE,OAAQpE,EAAUC,CAAVD,CAFQ,CAGhBkD,OAHgB,CADhBc,EAIAd,CARN,IAWO,gBACLQ,EAAOC,OADF,GACEA,EAASU,IAATV,CAAc,CACnBS,OAAQpE,EAAUC,CAAVD,CADW,CAEnBkD,OAFmB,CAGnBoB,cAAelD,CAHI,CAAduC,CADF,CAIYvC,EAzCrBF,CAJKgC,CAkDL,GAAMqB,GAAwC,CAC5CtE,OAAQyD,CADoC,CAE5C7C,QAF4C,CAG5CiB,iBAH4C,CAA9C,CAUA,OAJIC,IACFwC,EAAWC,WAAXD,CAAyB,CAAEJ,SAAUpC,CAAZ,CADvBA,EAIIlB,CAAR,EACE,YACE0D,EAAWnE,KAAXmE,CAAmBlC,EAAWe,iBAA9BmB,CACAA,EAAWzD,MAAXyD,CAAoBlC,EAAWgB,kBAD/BkB,CAEA,MAEF,gBACEA,EAAWnE,KAAXmE,CAAmB,CAAnBA,CACAA,EAAWzD,MAAXyD,CAAoB,EAAIlC,EAAWpB,WADnCsD,CAEA,MAEF,kBACEA,EAAWnE,KAAXmE,CAAmB3D,EAAKR,KAALQ,EAAcyB,EAAWe,iBAAzBxC,EAA8C,CAAjE2D,CACAA,EAAWzD,MAAXyD,CAAWzD,CAAUyD,EAAWnE,KAAXmE,EAAoB,CAA9BzD,EAAmCuB,EAAWpB,WADzDsD,CAZJ,CAgBA,MAAOA,EAAP,CAGF,IAAM3B,GAAyB,SAAC6B,CAAD,CAACA,OAC9BvG,OAAMwG,IAANxG,CAAW,GAAI+D,IAAJ,CAAIA,CAAK,CAALA,EAAK0C,MAAL1C,CAAWwC,CAAXxC,CAAJ,CAAX/D,EAAoC0G,IAApC1G,CAAyC2B,CAAzC3B,CAD8BuG,CACW5E,CAD3C,CAC2CA,QAsH3B2D,EAtH2B3D,CAsH3B2D,CAtH2B3D,CAsH3B2D,IASVN,EATUM,CACElB,IAAhBvB,cADcyC,CAEdpD,SAFcoD,CAGd1C,UAHc0C,CAGd1C,IACAW,GAJc+B,CAId/B,sBAJc+B,CAId/B,IACAiB,oBALcc,CAMdxC,eANcwC,CAOd3C,UAPc2C,CAUVvC,EAAcqB,EAAclC,KAAdkC,CAAsBA,EAAcxB,MAVxC0C,CAYRb,EAAYC,aAPKrD,CAOLqD,CAPKrD,CAOLqD,CAZJY,CAed,GAAIpD,GAASU,CAAb,CAAqB,CACnB,GAAM+B,GAAaC,EAA4BR,CAA5BQ,CAA2C,CAC5D1C,OAD4D,CAE5DU,QAF4D,CAG5DW,KAH4D,CAA3CqB,CAAnB,CAKA1C,EAAQyC,EAAWzC,KAAnBA,CACAU,EAAS+B,EAAW/B,MADpBV,CAEAa,EAAc4B,EAAW5B,WAFzBb,CAMFA,GAAQA,GAASiB,KAAKwD,GAALxD,CAASjB,CAATiB,CAAgBiB,EAAclC,KAA9BiB,CAAjBjB,CACAU,EAASA,GAAUO,KAAKwD,GAALxD,CAASP,CAATO,CAAiBiB,EAAcxB,MAA/BO,CADnBjB,CAIKA,GAAUU,CAAVV,GAEHU,GADAV,EAAQiB,KAAKwD,GAALxD,CAzfgB,GAyfhBA,CAA8BiB,EAAclC,KAA5CiB,CACRP,EAAiBG,CAFdb,CAJLA,CAWKA,IACHA,EAASU,EAAoBG,CAD1Bb,CAXLA,CAeA,GAAM2C,GAAgB3C,CAAtB,CA8BA,OA5BEkC,EAAclC,KAAdkC,CAAsBlC,CAAtBkC,EAA+BA,EAAcxB,MAAdwB,CAAwBxB,CA4BzD,IA1BEV,EAAQkC,EAAclC,KAAtBA,CACAU,EAASwB,EAAcxB,MAyBzB,EAtBAV,EAAQiB,KAAKC,KAALD,CAAWjB,CAAXiB,CAsBR,CAtBmBjB,OAEfY,CAFeZ,CAEfY,MAFeZ,CAEfY,EAAavD,MAFE2C,EAEO,CAFPA,CAEO,CACxB8C,EAAQlC,EAAYnC,MAAZmC,CAAmB,kBAAQkB,IAAQI,EAAclC,KAA9B8B,CAA8B9B,CAAjDY,CADgB,EAKhBvD,MALgB,CAKPuD,EAAYvD,MALL,EAKKA,CAC1ByF,EAAM4B,QAAN5B,CAAeZ,EAAclC,KAA7B8C,CANqB,EAQtBA,EAAMmB,IAANnB,CAAWZ,EAAclC,KAAzB8C,CAVe9C,CAcjB8C,GADAA,EAAQP,EAAUhE,GAAVgE,CAAc,kBAAWtB,MAAKC,KAALD,CAAW8B,EAAW/C,CAAtBiB,CAAX8B,CAAiC/C,CAA/CuC,CACRO,EAAcrE,MAAdqE,CAAqB,kBAAQhB,IAAQI,EAAclC,KAA9B8B,CAA8B9B,CAAnD8C,CAQF,CARqD9C,gBAIjDS,CAJiDT,EAIpB8C,EAAM4B,QAAN5B,CAAe9C,CAAf8C,CAJoB9C,EAKnD8C,EAAMmB,IAANnB,CAAW9C,CAAX8C,CAGF,CAAO,CACLA,MAFFA,EAAQA,EAAM0B,IAAN1B,CAAWrD,CAAXqD,CACD,CAELjC,aAFK,CAGLmC,kBAAmBL,CAHd,CAILM,mBAAoBhC,KAAKC,KAALD,CAAW0B,EAAgB9B,CAA3BI,CAJf,CAKLiC,cAAelD,CALV,CAAP,CAKiBA,SAIH0C,EAJG1C,CAKjB2E,CALiB3E,CAMjBnC,CANiBmC,CAMjBnC,CAGA,GAAM+G,GAAmBD,EAAW3E,KAAX2E,CAAmBA,EAAWjE,MAAvD,CAEIV,EAAQnC,EAAQmC,KAFpB,CAGIU,EAAS7C,EAAQ6C,MAHrB,CAKA,OAAQ7C,EAAQwD,GAAhB,EACE,WACErB,EAAQnC,EAAQmC,KAARnC,CAAgBA,EAAQmC,KAAxBnC,CAAgC8G,EAAW3E,KAAnDA,CACAU,EAAS7C,EAAQ6C,MAAR7C,CAAiBA,EAAQ6C,MAAzB7C,CAAkC8G,EAAWjE,MADtDV,CAEA,MAEF,aACE,GAAM6E,GAAchH,EAAQmC,KAARnC,CAChBA,EAAQmC,KADQnC,CAEhBiH,OAAOC,gBAFX,CAGMC,EAAenH,EAAQ6C,MAAR7C,CACjBA,EAAQ6C,MADS7C,CAEjBiH,OAAOC,gBALX,CAOA/E,EAAQiB,KAAKwD,GAALxD,CAAS4D,CAAT5D,CAAsBA,KAAKC,KAALD,CAAW+D,EAAeJ,CAA1B3D,CAAtBA,CAARjB,CACAU,EAASO,KAAKwD,GAALxD,CACP+D,CADO/D,CAEPA,KAAKC,KAALD,CAAW4D,EAAcD,CAAzB3D,CAFOA,CADTjB,CAKA,MAEF,cACE,GAAM6E,GAAchH,EAAQmC,KAARnC,CAAgBA,EAAQmC,KAAxBnC,CAAgC,CAApD,CACMmH,EAAenH,EAAQ6C,MAAR7C,CAAiBA,EAAQ6C,MAAzB7C,CAAkC,CADvD,CAGAmC,EAAQiB,KAAKgE,GAALhE,CAAS4D,CAAT5D,CAAsBA,KAAKC,KAALD,CAAW+D,EAAeJ,CAA1B3D,CAAtBA,CAARjB,CACAU,EAASO,KAAKgE,GAALhE,CACP+D,CADO/D,CAEPA,KAAKC,KAALD,CAAW4D,EAAcD,CAAzB3D,CAFOA,CADTjB,CAKA,MAGF,QACMnC,EAAQmC,KAARnC,EAAQmC,CAAUnC,EAAQ6C,MAA1B7C,GACFmC,EAAQnC,EAAQmC,KAAhBA,CACAU,EAASO,KAAKC,KAALD,CAAWpD,EAAQmC,KAARnC,CAAgB+G,CAA3B3D,CAFPpD,EAKAA,EAAQ6C,MAAR7C,EAAQ6C,CAAW7C,EAAQmC,KAA3BnC,GACFmC,EAAQiB,KAAKC,KAALD,CAAWpD,EAAQ6C,MAAR7C,CAAiB+G,CAA5B3D,CAARjB,CACAU,EAAS7C,EAAQ6C,MAFf7C,CALAA,CAlCR,CA8CA,MAAO,CACLmC,OADK,CAELU,QAFK,CAGLG,YAAab,EAAQU,CAHhB,CAAP,CAGuBA,OAAAA,gDAAAA,oGAAAA,EAAAA,GAAAA,gDAAAA,wBAAAA,EAAAA,SChlBTwE,EDglBSxE,EChlBTwE,CACd,MAAM,KAAN,EAAgDC,IAAhD,CARiB,IAAItD,IAAJ,GA2BnB,GAaauD,GAAW,SAACC,CAAD,CAACA,OACvB,MAdwB,UAExBA,CAFwB,CAExBA,eAGA1B,eAAQ0B,CAAR1B,EAAQ0B,WAAMxF,MAANwF,CAAR1B,EAAc9D,SAANyF,EAAcvB,QAARlE,CAAd8D,CAAsBI,MAAtBJ,CAAQ4B,EAAwBxF,GAAhC4D,CAHA0B,CAYIG,CAdoB,CAcFH,CAdE,EAefA,CAfe,CAOM,SAE9BA,CAF8B,CAE9BA,OACsC1B,eAAQ0B,CAAR1B,CAAQ0B,MAAR1B,CAAQ0B,EAAMI,eAAd9B,CADtC0B,CAQIK,CAV0B,CAUFL,CAVE,EAWrBA,EAAKI,eAXgB,CAWhBA,MAEPJ,CAFOI,EAEPJ,WAAMM,eAANN,CAFOI,CAEDE,MAFCF,CAEPG,EAAuBH,eAN9B,CAM8BA,CApBhC,CAuBaI,EAAS,SAACR,CAAD,CAACA,2BACrBD,EAASC,CAATD,CADqBC,GACZA,SAATS,EAAgBjG,MAAPwF,CADYA,EACLxF,SAAhBkG,EAAwBhC,QAARlE,CADKwF,CACGtB,MADHsB,CACrBW,EAAkCjG,GADbsF,CACatF,CAxBpC,CA0BaH,EAAY,SAACyF,CAAD,CAACA,2BACxBD,EAASC,CAATD,CADwBC,GACfA,SAATY,EAAgBpG,MAAPwF,CADeA,EACRxF,SAAhBqG,EAAwBnC,QAARlE,CADQwF,CACAtB,MADAsB,CACxBc,EAAkCnC,MADVqB,CACUrB,CA3BpC,CA2BoCA,QAwGpBoC,EAxGoBpC,CAwGpBoC,CAxGoBpC,CAwGpBoC,OACdC,WADcD,CAEdE,cAFcF,CAGdG,eAHcH,CAIdI,gBAJcJ,CAIdI,IACAhF,UALc4E,CAKd5E,6BALc4E,CAKd5E,IACAV,OANcsF,CAMdtF,aAAU,QAAVA,CAAUC,CANIqF,CAOdxF,eAPcwF,CAQdvI,WARcuI,CASXK,QATWL,CA8Cd,gBAlCGxF,CAkCH,GAlCG8F,EAAarJ,MAkChB,EAlCgBA,cACboJ,EAAMhG,MADOpD,EACPoD,eAA2BgG,EAAMhG,MAiC1C,GA/BEG,EAAcvB,CA+BhB,EAAOkC,OARFkF,CAQElF,CARFkF,CACHjF,YADGiF,CAEHrF,oBAvB0B,SAC1BiF,CAD0B,CAE1BrG,CAF0B,CAG1BU,CAH0B,CAI1BM,CAJ0B,CAI1BA,CAEA,MAAO,CACLhB,OADK,CAELU,QAFK,CAGLM,QAHK,CAILjB,IAAKuG,EAAW,CAAED,SAAF,CAAWrG,OAAX,CAAkBU,QAAlB,CAA0B7C,SAA1B,CAAmCmD,QAAnC,CAAXsF,CAJA,CAAP,CAIqDtF,CAWlDyF,CAGHvG,SAAUmG,CAHPI,CAIH3F,SAJG2F,CAKH7F,aALG6F,CAMH9F,eAb+D,CAC/DX,MAAOuG,CADwD,CAE/D7F,OAAQ8F,CAFuD,CAG/DxF,aAH+D,CAO5DyF,CAQElF,EAAP,CAZEP,SAqOY2F,EArOZ3F,CAsOF4F,CAtOE5F,CAuOF6F,CAvOE7F,CAuOF6F,WAEQhH,EAAkC+G,EAAlC/G,MAFRgH,CAEgBzC,EAA0BwC,EAA1BxC,WAFhByC,CAGMC,SADoCF,CACpCE,CADoCF,CACpCE,EADoCF,CAGxC/G,YACKA,CADLA,CACKA,CACH0D,QAAS,EADN1D,CADLA,CAHwC+G,CAOxCxC,YAAaA,QACRA,CADQA,CACRA,CACHb,QAAS,EADNa,CADQA,CAP2BwC,CACpCE,CAHND,CAyDA,MA1CAA,GAAYpD,OAAZoD,CAAoB,kBAAGE,SAAH,CAAUjH,SAAV,CACbiH,GAUHjH,EAAMW,MAANX,GAAiB8G,EAAanG,MAA9BX,EAA8BW,gBAC9BuG,YADAlH,EAGAN,CAHAM,CAI0GW,GAI5GqG,EAAOjH,MAAPiH,CAAcvD,OAJ8F9C,EAItFwD,IAJsFxD,CAItFwD,KAJsFxD,CAItFwD,CAJsFxD,CAKvGX,EAAMD,MAANC,CAAayD,OAAbzD,CAAqBvB,GAArBuB,CAAyB,YAC1B,YAAYqH,CAAZ,CAAYA,CAAQJ,OAARI,CAAZ,EAAoBJ,CADnBjH,EACmBiH,MADnBjH,CACmBiH,CAEtB,CACEA,OADF,CAEE/C,OAAQlE,EAAMD,MAANC,CAAaiE,QAAbjE,CAAsBkE,MAFhC,CAFsB+C,CADnBjH,CALuGW,CAJ1GX,CAkBGgH,EAAO1C,WAAP0C,EAILA,EAAO1C,WAAP0C,CAAmBvD,OAAnBuD,CAA2B7C,IAA3B6C,CAAgC,CAC9BC,OAD8B,CAE9B/C,OAAQlE,EAAMsE,WAANtE,CAAkBiE,QAFI,CAAhC+C,CAhCKC,EAkCuBhD,MAAAA,EAhCxBvE,CAFCuH,CAGC,CAJRF,EAIQ,GAkCRC,EAAOjH,MAAPiH,CAAcvD,OAlCN,EAkCcU,IAlCd,CAkCcA,KAlCd,CAkCcA,CAlCd,CAkCsBpE,EAAO0D,OAlC7B,CAJRsD,CAsCqCtD,MACjCa,CADiCb,EACjCa,EAAab,OADoBA,GACpBA,SACfuD,EAAO1C,WADQb,GACRa,KAAab,OAAba,EAAqBH,IAArBG,CAAqBH,KAArBG,CAAqBH,CAArBG,CAA6BA,EAAYb,OAAzCa,CAF4Bb,CAtCrCsD,CA0COC,CAAP,CAAOA,wGC9cHM,EAAuC,eAC3CrH,QAD2C,CAE3CiE,UAF2C,CAG3CqD,WAH2C,CAG3CA,IACAC,GAJ2C,CAI3CA,iBAJ2C,CAK3CC,cAL2C,CAM3CC,YAN2C,CAOxCf,QAPwC,CAS3C,mBACEgB,gCAAAA,YACMhB,CADNgB,CACMhB,CACJiB,SAAS,OADLjB,CAEJY,QAASA,CAFLZ,CAGJ1G,IAAKwH,EAAaxH,CAAbwH,CAAaxH,IAAM4H,EAHpBlB,CAGoBkB,WACbJ,MAAmBI,EAAnBJ,CAAaxH,CAJpB0G,CAKJzC,OAAQuD,EAAavD,CAAbuD,CAAavD,IAAS2D,EAL1BlB,CAK0BkB,cAChBJ,MAAsBI,EAAtBJ,CAAavD,CANvByC,CAOJa,IAAKA,CAPDb,CAQJmB,IAAKJ,CARDf,CADNgB,EADF,CAUSD,CD2bFV,CCtbIe,eAAUC,wBAAAA,CACrB,WAEEF,CAFF,CAEEA,IADE7D,aACF6D,CADE7D,IAAUR,OACZqE,CADYrE,aAAU,EAAVA,CAAUwE,CACtBH,CADsBI,IAAIT,UAC1BK,CAD0BL,eAC1BK,CADgDnB,QAChDmB,CAEM9E,EAAQ2D,EAAM3D,KAAN2D,GAAM3D,MAASiB,CAATjB,CAASiB,MAATjB,CAASiB,EAAUjB,KAAzB2D,CAFdmB,CAGMK,eACJR,gCAAAA,CAACL,CAADK,CAACL,KACKX,CADLW,CAEKrD,CAFLqD,CAEKrD,CACJjB,MAAOA,CADHiB,CAEJwD,WAAYA,CAFRxD,CAGJyD,SAAUI,CAHN7D,CAFLqD,CAADK,CAJFG,CAaA,MAAKrE,GAAQlG,MAARkG,cAKHkE,gCAAAA,gBACGlE,EAAQhF,GAARgF,CAAY,eAAGwD,UAAH,CAAU/C,UAAV,CAAkBE,QAAlB,CAAkBA,mBAC7BuD,gCAAAA,WACES,IAAQnB,MAAS7C,CAAT6C,CAAS7C,GAAT6C,CAAiB/C,CAD3ByD,CAEEvD,KAAMA,CAFRuD,CAGEV,MAAOA,CAHTU,CAIEzD,OAAQuD,EAAavD,CAAbuD,CAAavD,IAAS2D,EAJhCF,CAIgCE,cAChBJ,MAAsBI,EAAtBJ,CAAavD,CAL7ByD,CAME3E,MAAOA,CANT2E,EAD6BvD,CAOpBpB,CAPVS,CADHkE,CAWGQ,CAXHR,CALGlE,CACI0E,CADT,CACSA,CAjBUH,CDsbdhB,CChZTM,EAAMe,SAANf,CAAkB,CAChBrH,IAAKqI,4BADW,CAEhBd,IAAKc,4BAFW,CAGhBtF,MAAOsF,iBAHS,CAIhBpE,OAAQoE,iBAJQ,CAKhBb,WAAYa,eALI,CAAlBhB,CAQAS,EAAQU,WAARV,CAAQU,SARRnB,CASAS,EAAQM,SAARN,CAAoB,CAClBP,IAAKc,4BADa,CAElBb,WAAYa,eAFM,CAGlBrE,SAAUqE,gBAAAA,CAAgB,CACxBrI,IAAKqI,4BADmB,CAExBpE,OAAQoE,iBAFgB,CAGxBtF,MAAOsF,iBAHiB,CAAhBA,CAHQ,CAQlB7E,QAAS6E,kBAAAA,CACPA,oBAAAA,CAAoB,CAClBA,gBAAAA,CAAgB,CACdrB,MAAOqB,4BADO,CAEdlE,KAAMkE,iBAFQ,CAGdtF,MAAOsF,iBAHO,CAIdpE,OAAQoE,4BAJM,CAAhBA,CADkB,CAOlBA,gBAAAA,CAAgB,CACdrB,MAAOqB,iBADO,CAEdlE,KAAMkE,4BAFQ,CAGdtF,MAAOsF,iBAHO,CAIdpE,OAAQoE,4BAJM,CAAhBA,CAPkB,CAApBA,CADOA,CARS,CATpBhB,CA6BiCiB,mBC5HpBM,EACX,eAAuB5E,aAAvB,CAAoC0C,QAApC,CACE,MAAI1C,gBAEA0D,gCAAAA,CAACI,CAADJ,CAACI,KACKpB,CADLoB,CACKpB,CACJ1C,SAAU,CACRhE,IAAKgE,CADG,CADN0C,CAEG1C,gBAFH0C,CAKJa,IAAI,EALAb,CADLoB,CAADJ,CAFA1D,cAYK0D,gCAAAA,YAAShB,CAATgB,EAZT,CAYkBhB,CD8GW4B,CC1GjCM,EAAYJ,WAAZI,CAAYJ,aAAZI,CACAA,EAAYR,SAAZQ,CAAwB,CACtB5E,SAAUqE,iBADY,CAEtB7E,iBAASsE,EAAQM,SAAjB5E,EAAiB4E,MAAjB5E,CAASqF,EAAmBrF,OAFN,CAGtB+D,IAAK,SAAUb,CAAV,CAAiBoC,CAAjB,CAA2BC,CAA3B,CAA2BA,CAC9B,MAAKrC,GAAMoC,CAANpC,EAAMoC,GAGAjH,MAHAiH,CAGAjH,iBACSiH,CADTjH,CACSiH,iBADTjH,CACqCkH,CADrClH,CACqCkH,uBAJrCD,CAANpC,CAI2CqC,IAJhD,CAIgDA,CAR5B,CADxBH,CCtBaI,mBAAYjB,wBAAAA,CACvB,SAAmBrB,CAAnB,CAA0BmB,CAA1B,CAA0BA,CACxB,mBACEH,gCAAAA,CAAAA,6BAAAA,mBACEA,gCAAAA,CAACI,CAADJ,CAACI,GAAQD,IAAKA,CAAbC,EAAsBpB,CAAtBoB,CAADJ,CADFA,cAEEA,gCAAAA,8BACEA,gCAAAA,CAACI,CAADJ,CAACI,KAAYpB,CAAZoB,CAAYpB,CAAOc,YAAY,CAAnBd,CAAZoB,CAADJ,CADFA,CAFFA,CADF,CAIsC,CANjBK,CAAZiB,CAabA,EAAUR,WAAVQ,CAAUR,WAAVQ,CACAA,EAAUZ,SAAVY,CAAsBlB,EAAQM,SAD9BY,CAC8BZ,mBCNxBa,EAAyC,8BAC7CvB,gCAAAA,WACEvD,KAAK,QADPuD,CAEEwB,wBAAyB,CACvBC,whBADuB,CAF3BzB,EAD6C,CAIzCyB,CDEwBf,CC6CxBgB,EAAgD,eACpD1I,WADoD,CAEpDT,SAFoD,CAGpDU,UAHoD,CAKpD,oBAAID,CAAJ,cAEIgH,gCAAAA,yBAAiB2B,MAAO,CAAEC,WAAgB3I,EAASV,CAATU,CAAkB,GAAlBA,CAAkB,GAApC,CAAxB+G,EAFJ,CAEgE,gBAG5DhH,CAH4D,cAK5DgH,gCAAAA,QAAK2B,MAAO,CAAEE,SAAUtJ,CAAZ,CAAmBuJ,eAAnB,CAAZ9B,eACEA,gCAAAA,QACEH,IAAI,EADNG,CAEE+B,KAAK,cAFP/B,CAEO,cACO,MAHdA,CAIE1H,uDAAwDW,CAAxDX,CAAwDW,WAAxDX,CAA0EC,CAA1ED,CAA0EC,iEAJ5EyH,CAKE2B,MAAO,CACLE,eADK,CAELC,eAFK,CAGLE,iBAHK,CALThC,EADFA,CAL4D,CActDgC,IAhBV,CAgBUA,CDlEkBtB,CC4EjBuB,EACX,eAAyBC,aAAzB,CAAsClD,QAAtC,CACE,mBACEgB,gCAAAA,CAACmC,kBAADnC,CAACmC,IAADnC,cACEA,gCAAAA,CAAC0B,CAAD1B,CAAC0B,KAAU1C,CAAV0C,CAAD1B,CADFA,CAEGkC,CAFHlC,cAMcA,gCAAAA,CAACuB,CAADvB,CAACuB,IAADvB,CANdA,CADF,CAOiBuB,CDrFSb,CCqFTa,mBDrFSb,CCqFTa,+HDrFSb,CCqFTa,uBDrFSb,CENxB0B,EAAiB,SAACC,CAAD,CAACA,OAAwBA,GAAIlL,OAAJkL,CAAY,KAAZA,CAAY,EAAZA,CAAxBA,CAAoC,CFM9B3B,CEJjB4B,EAIR,oBAA+BC,EAA/B,CAAmCC,oBAAnC,CAAiDN,YAAjD,CAA8DlD,QAA9D,CACH,mBAAOgB,gCAAAA,CAACwC,CAADxC,CAACwC,KAASxD,CAATwD,CAADxC,CAAkBkC,CAAlBlC,CAAP,CAAyBkC,CFDGxB,CEIjB+B,EACX,eACEF,OADF,CAEEG,aAFF,CAGSC,SAHT,CAIEhB,SAJF,CAKEtJ,SALF,CAKEA,IACAuH,OANF,CAMEA,qBANF,CAOEgD,gBAPF,CAQEC,YARF,CASE5I,mBATF,CAUE6I,aAVF,CAWEC,kBAXF,CAYK/D,QAZL,CAcE,IAAK3G,CAAL,CAEE,MADAN,SAAQF,IAARE,CAAQF,0CAARE,EAAQF,IACR,CAEE8K,IACFD,EAAYC,CADVA,EAGJE,KACEC,WADFD,CAEEE,gBAFFF,CAGE5I,iBAHF4I,EAIKA,CAJLA,CAHIF,CAUJ,GACEpK,GAMEF,EANFE,KADF,CAEEU,EAKEZ,EALFY,MAFF,CAGED,EAIEX,EAJFW,MAHF,CAIEZ,EAGEC,EAHFD,MAJF,CAKEuE,EAEEtE,EAFFsE,WALF,CAMmBqG,EACf3K,EADF4B,eANF,CAMEA,WLuBJ1B,CKvBI0B,CLwBJhB,CKxBIgB,CLyBJjB,CKzBIiB,CLyBJjB,CAIA,GAAMiK,GAA8B,EAApC,CAEIP,wBAFJ,CAqBA,MAhBKjF,OACHwF,EAAajB,QAAbiB,CAAajB,UAAbiB,CACAA,EAAaC,QAAbD,CAAaC,QAFVzF,EAEUyF,UAGXlK,CAHWkK,EAIbD,EAAa1K,KAAb0K,CAAqB1K,CAArB0K,CACAA,EAAahK,MAAbgK,CAAsBhK,CALTiK,EAKSjK,gBACbD,CADaC,GAEjBwE,MACHwF,EAAanB,OAAbmB,CAAanB,cAAbmB,CACAA,EAAaE,aAAbF,CAAaE,KAFV1F,EAILiF,yDANsBzJ,CAPnBwE,CAgBE,CACLiF,WADK,CAEL,8BAFK,CAGLf,MAAOsB,CAHF,CAAP,CK3CMG,CAPFnJ,CAOkB1B,CAPlB0B,CAOyBhB,CAPzBgB,CAOiCjB,CAPjCiB,CANF,CAUSoJ,IAAP1B,KAVF,CAWa2B,IAAXZ,SAXF,CAYKa,QAZL,CAeMC,EAA4C,CAChDlH,aAAU4D,EADsC,CAEhDpE,QAAS,EAFuC,CAflD,CAqCA,MAlBI1D,GAAOkE,QAAPlE,GACFoL,EAAclH,QAAdkH,CAAclH,KACTlE,EAAOkE,QADEA,CACFA,CACVC,OAAQnE,EAAOkE,QAAPlE,CAAgBmE,MAAhBnE,CACJgK,EAAehK,EAAOkE,QAAPlE,CAAgBmE,MAA/B6F,CADIhK,CAC2BmE,IAC/B2D,EAHM5D,CADEA,CADZlE,EASAA,EAAO0D,OAAP1D,GACFoL,EAAc1H,OAAd0H,CAAwBpL,EAAO0D,OAAP1D,CAAetB,GAAfsB,CAAmB,YACzC,YACKsH,CADL,CACKA,CACHnD,OAAQ6F,EAAe1C,EAAOnD,MAAtB6F,CADL1C,CADL,EAEgCnD,CAHVnE,CADtBA,CATAA,cAmBF4H,gCAAAA,CAACsC,CAADtC,CAACsC,KACKiB,CADLjB,CACKiB,CACJhB,GAAIA,CADAgB,CAEJ5B,WACK0B,CADL1B,CAEKA,CAFLA,CAEKA,CACH1H,iBADG0H,CAFLA,CAFI4B,CAOJb,UAAcY,GAASZ,MAAgBA,CAAhBA,CAAgBA,EAAzBY,CAPVC,CADLjB,CAADtC,cAUEA,gCAAAA,CAACiC,CAADjC,CAACiC,CAAcjJ,OAAQA,CAAtBiJ,CAA8B1J,MAAOA,CAArC0J,CAA4ChJ,OAAQA,CAApDgJ,CAADjC,cACEA,gCAAAA,CAACkB,CAADlB,CAACkB,cLkNTvE,CKlNSuE,CLmNTuC,CKnNSvC,CLoNTlI,CKpNSkI,CLqNT3I,CKrNS2I,CLsNTjI,CKtNSiI,CLuNTjH,CKvNSiH,CLwNT4B,CKxNS5B,CLyNT6B,CKzNS7B,CLyNT6B,CAEA,GAAME,GAA8B,EAApC,CAEIhJ,IACFgJ,EAAahJ,eAAbgJ,CAA+BhJ,CAA/BgJ,CAA+BhJ,UAE3BjB,CAF2BiB,EAG7BgJ,EAAa1K,KAAb0K,CAAqB1K,CAArB0K,CACAA,EAAahK,MAAbgK,CAAsBhK,CADtBgK,CAEAA,EAAahJ,eAAbgJ,CAA+BhJ,CAF/BgJ,CAGAA,EAAajB,QAAbiB,CAAajB,UANgB/H,EAMhB+H,iBACJhJ,CADIgJ,EACJhJ,cAMAA,CAPIgJ,IAEbiB,EAAajB,QAAbiB,CAAajB,UAAbiB,CACAA,EAAaS,GAAbT,CAAmB,CADnBA,CAEAA,EAAaU,IAAbV,CAAoB,CAFpBA,CAGAA,EAAaW,MAAbX,CAAsB,CAHtBA,CAIAA,EAAaY,KAAbZ,CAAqB,CANRjB,CAPb/H,EAuBA6I,IACFG,EAAaH,SAAbG,CAAyBH,CADvBA,CAvBA7I,CA2BA8I,IACFE,EAAaF,cAAbE,CAA8BF,CAD5BA,CA3BA9I,CA8BJ,GAAM4B,QACDc,CADCd,CACDc,CACH,eAAe,CADZA,CAEH,2BAFGA,CAGHgF,SACEmC,QAAwB,CAD1BnC,CAEEoC,iCAFFpC,EAGKsB,CAHLtB,CAHGhF,CADCd,CAAN,CAsBA,MAVK4B,OACH5B,EAAO8F,KAAP9F,CAAe,CACb5C,aADa,CAEb0K,KAAM,CAFO,CAGb3B,mBAHa,CAIb0B,IAAK,CAJQ,CAKbnL,YALa,CADZkF,EAUE5B,CAAP,CKhRcmI,CADL9C,CAEGvE,CAFHuE,CAGG,CAHHA,CAIGlI,CAJHkI,CAKG3I,CALH2I,CAMGjI,CANHiI,CAOG8B,CAPH9B,CAQG4B,CARH5B,CASG6B,CATH7B,EAADlB,CADFA,cAcEA,gCAAAA,CAACsB,CAADtB,CAACsB,2BACuB,EADvBA,CAECoB,UAAWE,CAFZtB,EAGMtC,CAHNsC,CAGMtC,SLmHfiF,CKnHejF,CLoHfyE,CKpHezE,CLqHf5G,CKrHe4G,CLsHfY,CKtHeZ,CLuHfkF,CKvHelF,CLwHfmF,CKxHenF,CLyHfmB,CKzHenB,CL0Hf2C,CK1He3C,CL0Hf2C,CA+DA,gBA/DAA,CA+DA,GA/DAA,EAAuB,EA+DvB,EA3BKlE,MACHkE,KACE1I,aADF0I,CAEEgC,KAAM,CAFRhC,CAGEK,mBAHFL,CAIE+B,IAAK,CAJP/B,CAKEyC,yBALFzC,CAMEoC,iCANFpC,CAOEpJ,YAPFoJ,CAQE0C,oBARF1C,EASKA,CATLA,CADGlE,CA2BL,CAjBOkE,KAKFvJ,CALEuJ,CAKFvJ,CACHwH,SADGxH,CAEH0H,WAAYmE,CAFT7L,CAGH,oBAHGA,CAIHuJ,WACKA,CADLA,CACKA,CACHmC,QAAwB,CADrBnC,CADLA,CAJGvJ,CAQHkM,OAzDkD,SAAUC,CAAV,CAAUA,CAO5D,GAAMC,GAASD,EAAEE,aAAjB,CACMpI,EAAM,GAAIsD,MAAJ,EADZ,CAEAtD,EAAI/D,GAAJ+D,CAAUmI,EAAOE,UAAjBrI,CAEIA,EAAIsI,MAAJtI,CAEFA,EACGsI,MADHtI,GACGsI,KADHtI,CAES,YAFTA,EAKGuI,IALHvI,CAKQ,WACJ6H,GAAa,CAAbA,EAAa,CANjB7H,CAFEA,CAWF6H,GAAa,CAAbA,CAbF7H,CAae,CA2BZjE,CASH+H,QK7KUD,ELoKP9H,CALEuJ,CAiBP,CKvLckD,CAFC7F,CAED6F,UACFjF,CAHGZ,CAIH,CAJGA,CAKHwE,CALGxE,CAMHY,CANGZ,CAMHY,IACAM,EAPGlB,CAQHkB,CARGlB,CASHkB,CATGlB,CAUH6D,CAVG7D,CAHNsC,CAADtB,CAdFA,CAVFA,CADF,CAsCU6C,CF5GgBnC,CE4GhBmC,+MF5GgBnC,CG4CxBoE,WAzCJrC,CAyCIqC,CAzCJrC,CAEA,mBACEnK,YACayM,IAAbC,WADA1M,CAEA2M,WAFA3M,CAmBG0G,QAnBH1G,CAyBA,MAJI2M,IACFlN,QAAQF,IAARE,CAAakN,CAAblN,CADEkN,CAIAF,eACK/E,gCAAAA,CAACyC,CAADzC,CAACyC,GAAYpK,MAAO0M,CAAnBtC,EAAkCzD,CAAlCyD,CAADzC,CADL+E,EAGJhN,QAAQF,IAARE,CAAQF,kBAARE,CAAiCO,CAAjCP,EACKkN,mBAAW1F,YAAX0F,EACHlN,CAFFA,CAEUF,IALNkN,CAAJ,CAKUlN,CA/BZ,CAwCAqN,CADIJ,CACYK,CADZL,CH5CwBpE,CG+CxB0E,EAAmD,SACvDpG,CADuD,CAEvDoC,CAFuD,CAEvDA,CAGA,oBACEpC,EAAMhG,MADR,EACQA,UACLoI,CADKpI,EACLoI,WAAwBA,CAF3B,EAE2BA,CACzBpC,EAAMoC,CAANpC,CAHF,CASO2B,iCAAAA,CAAAA,sBAAAA,EAAiB3B,CAAjB2B,CAAwBS,CAAxBT,EAAwBS,MAAxBT,CAAwBS,0BAAxBT,EATP,CAS+BS,GAJlBjH,MAIkBiH,CAJlBjH,IACLiH,CADKjH,CACLiH,IADKjH,CACQ6E,EAAMoC,CAANpC,CADR7E,CACciH,8CAGIA,CAT/B,CAM2BA,CH1DCV,CGgExB4E,EAAe,GAAIlL,IAAJ,CAAQ,mCAAR,CHhESsG,CGkEjBA,EAAY,CACvBpI,IAAKqI,wCADkB,CAEvBd,IDgDuD,SACvDb,CADuD,CAEvDoC,CAFuD,CAGvDC,CAHuD,CAGvDA,CAGA,MAAKrC,GAAMa,GAANb,EAAMa,KAAOb,EAAMa,GAAnBb,CAKE2B,iCAAAA,CAAAA,sBAAAA,EAAiB3B,CAAjB2B,CAAwBS,CAAxBT,CAAkCU,CAAlCV,EAAkCU,MAAlCV,CAAkCU,0BAAlCV,EALF3B,CAKoCqC,GAJ5BlH,MAI4BkH,CAJ5BlH,iCACwBkH,CADxBlH,CACwBkH,yJAGIA,CALzC,CAEqCA,CC1Dd,CAGvB9I,MAAO6M,CAHgB,CAIvBnM,OAAQmM,CAJe,CAKvB/J,MAAOsF,6BALgB,CAMvB3H,OAAQ,SAACgG,CAAD,CAACA,CACP,OAAqBkB,EAArB,GAAIlB,EAAMhG,MAAV,EAAUA,CAGNsM,EAAahL,GAAbgL,CAAiBtG,EAAMhG,MAAvBsM,CAHJ,CAOA,UAAWnL,MAAX,CAAWA,iBACQ6E,EAAMhG,MADdmB,CACcnB,oHADzB,EACyBA,CAfJ,CHlEK0H,CGsF9BoE,EAAYhE,WAAZgE,CAAYhE,aAAZgE,CACAA,EAAYpE,SAAZoE,CAAwBpE,CADxBoE;;ACzGA;AACA;AACA;AACA;AACA;AACA,GAMA,KAAMU,CAAAA,GAAG,CAAG,IAAM,kDAChB,KAAMC,CAAAA,IAAI,CAAGF,uCAAc,cAA3B,CAgBA;AACA,KAAMG,CAAAA,MAAM,wBAAGD,IAAI,CAACE,IAAL,CAAUC,YAAb,gDAAG,sBAAwBF,MAAvC,CACA,KAAMG,CAAAA,MAAM,yBAAGJ,IAAI,CAACE,IAAL,CAAUC,YAAb,iDAAG,uBAAwBC,MAAvC,CAEA,mBACE,+BAAK,SAAS,CAAC,KAAf,eACE,wBAAC,CAAD,EACE,SAAS,CAAC,YADZ,CAEE,MAAM,CAAC,OAFT,CAGE,OAAO,CAAE,CAAC,MAAD,CAAS,MAAT,CAAiB,MAAjB,CAHX,CAIE,GAAG,CAAC,2BAJN,CAKE,KAAK,CAAE,EALT,CAME,MAAM,CAAE,EANV,CAOE,OAAO,CAAE,EAPX,CAQE,GAAG,CAAC,iBARN,wCADF,CAWG,CAAAH,MAAM,OAAN,EAAAA,MAAM,SAAN,QAAAA,MAAM,CAAEI,IAAR,gBACC,4DACa,sCAASJ,MAAM,CAACI,IAAhB,CADb,KAC6C,CAAAJ,MAAM,OAAN,EAAAA,MAAM,SAAN,QAAAA,MAAM,CAAEK,OAAR,GAAmB,IADhE,CAEI,GAFJ,cAGE,6BAAG,IAAI,CAAG,sBAAqB,CAAAF,MAAM,OAAN,EAAAA,MAAM,SAAN,QAAAA,MAAM,CAAEG,OAAR,GAAoB,EAAE,EAArD,wBAHF,CAZJ,CADF,CAuBD,CA5CD,CA8CA,0CAAeR,GAAf;;;;;;;;;;;;;ACtDA,KAAMU,CAAAA,MAAM,CAAG,CAAC,CAAEC,QAAF,CAAYC,KAAZ,CAAmBlE,QAAnB,CAAD,GAAmC,CAChD,KAAMmE,CAAAA,QAAQ,CAAI,GAAEC,EAAgB,GAApC,CACA,KAAMC,CAAAA,UAAU,CAAGJ,QAAQ,CAACK,QAAT,GAAsBH,QAAzC,CACA,GAAII,CAAAA,MAAJ,CAEA,GAAIF,UAAJ,CAAgB,CACdE,MAAM,cACJ,uDAAI,SAAS,CAAC,cAAd,eACE,iDAAC,wCAAD,EAAM,EAAE,CAAC,GAAT,EAAcL,KAAd,CADF,CADF,CAKD,CAND,IAMO,CACLK,MAAM,cACJ,iDAAC,wCAAD,EAAM,SAAS,CAAC,kBAAhB,CAAmC,EAAE,CAAC,GAAtC,EACGL,KADH,CADF,CAKD,CAED,mBACE,wDAAK,SAAS,CAAC,gBAAf,CAAgC,oBAAmBG,UAAnD,eACE,2DAAQ,SAAS,CAAC,eAAlB,EAAmCE,MAAnC,CADF,cAEE,6DAAOvE,QAAP,CAFF,cAGE,uEACK,GAAIwE,CAAAA,IAAJ,GAAWC,WAAX,EADL,gBAEI,GAFJ,cAGE,sDAAG,IAAI,CAAC,0BAAR,WAHF,CAHF,CADF,CAWD,CA9BD,CAgCA,iEAAeT,MAAf;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA,GAOA,KAAMW,CAAAA,GAAG,CAAG,CAAC,CAAEC,WAAF,CAAeC,IAAf,CAAqBC,IAArB,CAA2BZ,KAA3B,CAAD,GAAwC,kEAClD,KAAM,CAAET,IAAF,EAAWJ,sDAAc,cAA/B,CAgBA,KAAM0B,CAAAA,eAAe,CAAGH,WAAW,EAAInB,IAAI,CAACC,YAAL,CAAkBkB,WAAzD,CACA,KAAMI,CAAAA,YAAY,qBAAGvB,IAAI,CAACC,YAAR,6CAAG,mBAAmBQ,KAAxC,CAEA,mBACE,iDAAC,gDAAD,EACE,cAAc,CAAE,CACdW,IADc,CADlB,CAIE,KAAK,CAAEX,KAJT,CAKE,aAAa,CAAEc,YAAY,CAAI,QAAOA,YAAa,EAAxB,CAA4B,IALzD,CAME,IAAI,CAAE,CACJ,CACEpB,IAAI,CAAG,aADT,CAEEqB,OAAO,CAAEF,eAFX,CADI,CAKJ,CACEG,QAAQ,CAAG,UADb,CAEED,OAAO,CAAEf,KAFX,CALI,CASJ,CACEgB,QAAQ,CAAG,gBADb,CAEED,OAAO,CAAEF,eAFX,CATI,CAaJ,CACEG,QAAQ,CAAG,SADb,CAEED,OAAO,CAAG,SAFZ,CAbI,CAiBJ,CACErB,IAAI,CAAG,cADT,CAEEqB,OAAO,CAAG,SAFZ,CAjBI,CAqBJ,CACErB,IAAI,CAAG,iBADT,CAEEqB,OAAO,CAAE,sBAAAxB,IAAI,CAACC,YAAL,yFAAmBC,MAAnB,sEAA2BG,OAA3B,GAAuC,EAFlD,CArBI,CAyBJ,CACEF,IAAI,CAAG,eADT,CAEEqB,OAAO,CAAEf,KAFX,CAzBI,CA6BJ,CACEN,IAAI,CAAG,qBADT,CAEEqB,OAAO,CAAEF,eAFX,CA7BI,EAiCJnK,MAjCI,CAiCGkK,IAjCH,CANR,EADF,CA2CD,CA/DD,CAiEAH,GAAG,CAACQ,YAAJ,CAAmB,CACjBN,IAAI,CAAG,IADU,CAEjBC,IAAI,CAAE,EAFW,CAGjBF,WAAW,CAAG,EAHG,CAAnB,CAMAD,GAAG,CAACnG,SAAJ,CAAgB,CACdoG,WAAW,CAAEnG,0DADC,CAEdoG,IAAI,CAAEpG,0DAFQ,CAGdqG,IAAI,CAAErG,yDAAA,CAAkBA,0DAAlB,CAHQ,CAIdyF,KAAK,CAAEzF,qEAJO,CAAhB,CAOA,iEAAekG,GAAf;;;;;;;;;;;;;;;;;ACnFA,KAAMU,CAAAA,gBAAgB,CAAG,CAAC,CAAE9B,IAAF,CAAQU,QAAR,CAAD,GAAwB,2BAC/C,KAAMqB,CAAAA,IAAI,CAAG/B,IAAI,CAACgC,cAAlB,CACA,KAAMC,CAAAA,SAAS,CAAG,wBAAAjC,IAAI,CAACE,IAAL,CAAUC,YAAV,sEAAwBQ,KAAxB,GAAkC,OAApD,CACA,KAAM,CAAEuB,QAAF,CAAYC,IAAZ,EAAqBnC,IAA3B,CAEA,mBACE,iDAAC,mEAAD,EAAQ,QAAQ,CAAEU,QAAlB,CAA4B,KAAK,CAAEuB,SAAnC,eACE,iDAAC,gEAAD,EACE,KAAK,CAAEF,IAAI,CAACK,WAAL,CAAiBzB,KAD1B,CAEE,WAAW,CAAEoB,IAAI,CAACK,WAAL,CAAiBf,WAAjB,EAAgCU,IAAI,CAACM,OAFpD,EADF,cAKE,4DACE,SAAS,CAAC,WADZ,CAEE,SAAS,KAFX,CAGE,QAAQ,CAAC,2BAHX,eAKE,4EACE,uDAAI,QAAQ,CAAC,UAAb,EAAyBN,IAAI,CAACK,WAAL,CAAiBzB,KAA1C,CADF,cAEE,0DAAIoB,IAAI,CAACK,WAAL,CAAiBE,IAArB,CAFF,CALF,cASE,4DACE,uBAAuB,CAAE,CAAEtG,MAAM,CAAE+F,IAAI,CAACQ,IAAf,CAD3B,CAEE,QAAQ,CAAC,aAFX,EATF,cAaE,2DAbF,cAcE,4EACE,iDAAC,gEAAD,MADF,CAdF,CALF,cAuBE,wDAAK,SAAS,CAAC,eAAf,eACE,uDACE,KAAK,CAAE,CACLlG,OAAO,CAAG,MADL,CAELmG,QAAQ,CAAG,MAFN,CAGLC,cAAc,CAAG,eAHZ,CAILC,SAAS,CAAG,MAJP,CAKLC,OAAO,CAAE,CALJ,CADT,eASE,2DACGT,QAAQ,eACP,iDAAC,wCAAD,EAAM,EAAE,CAAEA,QAAQ,CAACU,MAAT,CAAgBC,IAA1B,CAAgC,GAAG,CAAC,MAApC,YACKX,QAAQ,CAACE,WAAT,CAAqBzB,KAD1B,CAFJ,CATF,cAgBE,2DACGwB,IAAI,eACH,iDAAC,wCAAD,EAAM,EAAE,CAAEA,IAAI,CAACS,MAAL,CAAYC,IAAtB,CAA4B,GAAG,CAAC,MAAhC,EACGV,IAAI,CAACC,WAAL,CAAiBzB,KADpB,WAFJ,CAhBF,CADF,CAvBF,CADF,CAoDD,CAzDD,CA2DA,iEAAemB,gBAAf,EAEO,KAAMgB,CAAAA,SAAS,aAAf","sources":["webpack://blog/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://blog/../src/image-utils.ts","webpack://blog/../src/components/hooks.ts","webpack://blog/../src/components/picture.tsx","webpack://blog/../src/components/placeholder.tsx","webpack://blog/../src/components/main-image.tsx","webpack://blog/../src/components/layout-wrapper.tsx","webpack://blog/../src/components/gatsby-image.server.tsx","webpack://blog/../src/components/static-image.server.tsx","webpack://blog/./src/components/bio.js","webpack://blog/./src/components/layout.js","webpack://blog/./src/components/seo.js","webpack://blog/./src/templates/blog-post.js"],"sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","/* eslint-disable no-unused-expressions */\nimport { stripIndent } from \"common-tags\"\nimport camelCase from \"camelcase\"\nimport { IGatsbyImageData } from \".\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.substr(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(stripIndent`\n    The requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport {\n  useState,\n  CSSProperties,\n  useEffect,\n  HTMLAttributes,\n  ImgHTMLAttributes,\n  ReactEventHandler,\n  SetStateAction,\n  Dispatch,\n  RefObject,\n} from \"react\"\nimport { Node } from \"gatsby\"\nimport { PlaceholderProps } from \"./placeholder\"\nimport { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport {\n  IGatsbyImageHelperArgs,\n  generateImageData,\n  Layout,\n  EVERY_BREAKPOINT,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\nconst imageCache = new Set<string>()\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport function storeImageloaded(cacheKey?: string): void {\n  if (cacheKey) {\n    imageCache.add(cacheKey)\n  }\n}\n\nexport function hasImageLoaded(cacheKey: string): boolean {\n  return imageCache.has(cacheKey)\n}\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nexport type ImageDataLike = FileNode | IGatsbyImageDataParent | IGatsbyImageData\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport async function applyPolyfill(\n  ref: RefObject<HTMLImageElement>\n): Promise<void> {\n  if (!(`objectFitPolyfill` in window)) {\n    await import(\n      // @ts-ignore typescript can't find the module for some reason ¯\\_(ツ)_/¯\n      /* webpackChunkName: \"gatsby-plugin-image-objectfit-polyfill\" */ `objectFitPolyfill`\n    )\n  }\n  ;(window as any).objectFitPolyfill(ref.current)\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  toggleLoaded?: (loaded: boolean) => void,\n  cacheKey?: string,\n  ref?: RefObject<HTMLImageElement>,\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  const onLoad: ReactEventHandler<HTMLImageElement> = function (e) {\n    if (isLoaded) {\n      return\n    }\n\n    storeImageloaded(cacheKey)\n\n    const target = e.currentTarget\n    const img = new Image()\n    img.src = target.currentSrc\n\n    if (img.decode) {\n      // Decode the image through javascript to support our transition\n      img\n        .decode()\n        .catch(() => {\n          // ignore error, we just go forward\n        })\n        .then(() => {\n          toggleLoaded(true)\n        })\n    } else {\n      toggleLoaded(true)\n    }\n  }\n\n  // Polyfill \"object-fit\" if unsupported (mostly IE)\n  if (ref?.current && !(`objectFit` in document.documentElement.style)) {\n    ref.current.dataset.objectFit = style.objectFit ?? `cover`\n    ref.current.dataset.objectPosition = `${style.objectPosition ?? `50% 50%`}`\n    applyPolyfill(ref)\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n    onLoad,\n    ref,\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport function useImageLoaded(\n  cacheKey: string,\n  loading: \"lazy\" | \"eager\",\n  ref: any\n): {\n  isLoaded: boolean\n  isLoading: boolean\n  toggleLoaded: Dispatch<SetStateAction<boolean>>\n} {\n  const [isLoaded, toggleLoaded] = useState(false)\n  const [isLoading, toggleIsLoading] = useState(loading === `eager`)\n\n  const rAF =\n    typeof window !== `undefined` && `requestAnimationFrame` in window\n      ? requestAnimationFrame\n      : function (cb: TimerHandler): number {\n          return setTimeout(cb, 16)\n        }\n  const cRAF =\n    typeof window !== `undefined` && `cancelAnimationFrame` in window\n      ? cancelAnimationFrame\n      : clearTimeout\n\n  useEffect(() => {\n    let interval: number\n    // @see https://stackoverflow.com/questions/44074747/componentdidmount-called-before-ref-callback/50019873#50019873\n    function toggleIfRefExists(): void {\n      if (ref.current) {\n        if (loading === `eager` && ref.current.complete) {\n          storeImageloaded(cacheKey)\n          toggleLoaded(true)\n        } else {\n          toggleIsLoading(true)\n        }\n      } else {\n        interval = rAF(toggleIfRefExists)\n      }\n    }\n    toggleIfRefExists()\n\n    return (): void => {\n      cRAF(interval)\n    }\n  }, [])\n\n  return {\n    isLoading,\n    isLoaded,\n    toggleLoaded,\n  }\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","/* eslint-disable filenames/match-regex */\nimport React, {\n  FunctionComponent,\n  ImgHTMLAttributes,\n  forwardRef,\n  LegacyRef,\n} from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n  innerRef: LegacyRef<HTMLImageElement>\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  innerRef,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n      ref={innerRef}\n    />\n  )\n}\n\nexport const Picture = forwardRef<HTMLImageElement, PictureProps>(\n  function Picture(\n    { fallback, sources = [], shouldLoad = true, ...props },\n    ref\n  ) {\n    const sizes = props.sizes || fallback?.sizes\n    const fallbackImage = (\n      <Image\n        {...props}\n        {...fallback}\n        sizes={sizes}\n        shouldLoad={shouldLoad}\n        innerRef={ref}\n      />\n    )\n\n    if (!sources.length) {\n      return fallbackImage\n    }\n\n    return (\n      <picture>\n        {sources.map(({ media, srcSet, type }) => (\n          <source\n            key={`${media}-${type}-${srcSet}`}\n            type={type}\n            media={media}\n            srcSet={shouldLoad ? srcSet : undefined}\n            data-srcset={!shouldLoad ? srcSet : undefined}\n            sizes={sizes}\n          />\n        ))}\n        {fallbackImage}\n      </picture>\n    )\n  }\n)\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { forwardRef } from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage = forwardRef<HTMLImageElement, MainImageProps>(\n  function MainImage(props, ref) {\n    return (\n      <>\n        <Picture ref={ref} {...props} />\n        <noscript>\n          <Picture {...props} shouldLoad={true} />\n        </noscript>\n      </>\n    )\n  }\n)\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../global.d.ts\" />\n\nimport React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer: string | null = null\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {\n          // eslint-disable-next-line no-undef\n          SERVER && <NativeScriptLoading />\n        }\n      </Fragment>\n    )\n  }\n","import React, {\n  ElementType,\n  FunctionComponent,\n  CSSProperties,\n  WeakValidationMap,\n} from \"react\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImageHydrator: FunctionComponent<{\n  as?: ElementType\n  style?: CSSProperties\n  className?: string\n}> = function GatsbyImageHydrator({ as: Type = `div`, children, ...props }) {\n  return <Type {...props}>{children}</Type>\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n    if (preactClass) {\n      className = preactClass\n    }\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return (\n      <GatsbyImageHydrator\n        {...wrapperProps}\n        as={as}\n        style={{\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        }}\n        className={`${wClass}${className ? ` ${className}` : ``}`}\n      >\n        <LayoutWrapper layout={layout} width={width} height={height}>\n          <Placeholder\n            {...getPlaceholderProps(\n              placeholder,\n              false,\n              layout,\n              width,\n              height,\n              placeholderBackgroundColor,\n              objectFit,\n              objectPosition\n            )}\n          />\n\n          <MainImage\n            data-gatsby-image-ssr=\"\"\n            className={imgClassName}\n            {...(props as Omit<MainImageProps, \"images\" | \"fallback\">)}\n            // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n            {...getMainProps(\n              loading === `eager`,\n              false,\n              cleanedImages,\n              loading,\n              undefined,\n              undefined,\n              undefined,\n              imgStyle\n            )}\n          />\n        </LayoutWrapper>\n      </GatsbyImageHydrator>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter,\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://github.com/${social?.twitter || ``}`}>\n            follow me on GitHub\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">{title}</Link>\n      </h1>\n    )\n  } else {\n    header = (\n      <Link className=\"header-link-home\" to=\"/\">\n        {title}\n      </Link>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={defaultTitle ? `%s | ${defaultTitle}` : null}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata?.social?.twitter || ``,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["preserveCamelCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","length","character","test","toUpperCase","slice","toLowerCase","camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","postProcess","x","charAt","map","trim","filter","join","hasUpperCase","replace","_","p1","m","module","exports","default","DEFAULT_PIXEL_DENSITIES","DEFAULT_BREAKPOINTS","EVERY_BREAKPOINT","warn","message","console","sortNumeric","a","b","getSrcSet","images","image","src","width","formatFromFilename","filename","dot","lastIndexOf","ext","substr","setDefaultDimensions","args","layout","height","sourceMetadata","breakpoints","aspectRatio","formats","u","format","Math","round","getLowResolutionImageURL","generateImageSource","fit","_generateImageSource","generateImageData","pluginName","reporter","backgroundColor","placeholderURL","Error","Set","size","has","add","imageSizes","imgDimensions","erroneousUserDimensions","entries","dim","outputPixelDensities","densities","dedupeAndSortDensities","calculated","getDimensionsAndAspectRatio","originalWidth","fixedDimension","stripIndent","sizes","density","presentationWidth","presentationHeight","unscaledWidth","fixedImageSizes","responsiveImageSizes","calculateImageSizes","result","sources","getSizes","forEach","imageSrc","Boolean","unscaled","find","img","fallback","srcSet","push","type","imageProps","placeholder","values","from","concat","sort","min","includes","dimensions","imageAspectRatio","widthOption","Number","MAX_SAFE_INTEGER","heightOption","max","gatsbyImageIsInstalled","GATSBY___IMAGE","getImage","node","_node$images","_node$images$fallback","isGatsbyImageData","gatsbyImageData","isGatsbyImageDataParent","childImageSharp","_node$childImageSharp","getSrc","_getImage","_getImage$images","_getImage$images$fall","_getImage2","_getImage2$images","_getImage2$images$fal","getImageData","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","_breakpoints","withArtDirection","defaultImage","artDirected","output","media","process","env","NODE_ENV","source","Image","loading","alt","shouldLoad","innerRef","React","decoding","undefined","ref","Picture","forwardRef","r","o","fallbackImage","key","propTypes","PropTypes","isRequired","bool","displayName","exact","arrayOf","oneOfType","Placeholder","_Picture$propTypes","propName","componentName","MainImage","NativeScriptLoading","dangerouslySetInnerHTML","__html","Sizer","style","paddingTop","maxWidth","display","role","position","LayoutWrapper","children","Fragment","removeNewLines","str","GatsbyImageHydrator","as","Type","GatsbyImage","className","preactClass","imgClassName","imgStyle","objectFit","objectPosition","placeholderBackgroundColor","wrapperStyle","overflow","verticalAlign","getWrapperProps","wStyle","wClass","wrapperProps","cleanedImages","isLoaded","top","left","bottom","right","opacity","transition","getPlaceholderProps","isLoading","toggleLoaded","cacheKey","transform","willChange","onLoad","e","target","currentTarget","currentSrc","decode","then","getMainProps","StaticImage","imageData","__imageData","__error","_getStaticImage","GatsbyImageServer","checkDimensionProps","number","validLayouts","useStaticQuery","Bio","data","author","site","siteMetadata","social","name","summary","twitter","Link","Layout","location","title","rootPath","__PATH_PREFIX__","isRootPath","pathname","header","Date","getFullYear","Helmet","Seo","description","lang","meta","metaDescription","defaultTitle","content","property","defaultProps","object","BlogPostTemplate","post","markdownRemark","siteTitle","previous","next","frontmatter","excerpt","date","html","flexWrap","justifyContent","listStyle","padding","fields","slug","pageQuery"],"sourceRoot":""}